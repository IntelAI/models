diff --git a/research/object_detection/inference/detection_inference.py b/research/object_detection/inference/detection_inference.py
old mode 100644
new mode 100755
index dc66686f..84e5973c
--- a/research/object_detection/inference/detection_inference.py
+++ b/research/object_detection/inference/detection_inference.py
@@ -15,9 +15,12 @@
 """Utility functions for detection inference."""
 from __future__ import division
 
+import os
+
 import tensorflow as tf
 
 from object_detection.core import standard_fields
+from object_detection.utils import label_map_util
 
 
 def build_input(tfrecord_paths):
@@ -134,6 +137,13 @@ def infer_detections_and_add_to_example(
           detection_bbox_xmax].float_list.value[:] = detected_boxes[3]
   feature[standard_fields.TfExampleFields.
           detection_class_label].int64_list.value[:] = detected_classes
+  label_file = os.path.join(os.path.dirname(os.path.realpath(__file__)), '../data/mscoco_label_map.pbtxt')
+  if feature[standard_fields.TfExampleFields.object_class_text].HasField("bytes_list"):
+    cl = feature[standard_fields.TfExampleFields.object_class_text].bytes_list.value
+    cl = [x if type(x) == 'str' else x.decode('utf-8') for x in cl]
+  lm = label_map_util.get_label_map_dict(label_file, use_display_name = True)
+  label_id = [lm[x] for x in cl]
+  feature[standard_fields.TfExampleFields.object_class_label].int64_list.value[:] = label_id
 
   if discard_image_pixels:
     del feature[standard_fields.TfExampleFields.image_encoded]
