name: Model Zoo Containers Build
on:
  workflow_dispatch:
    inputs:
      framework:
        description: 'Framework: Choose the framework to work with.'
        required: true
        type: choice
        options:
        - tensorflow
        - pytorch
      workload:
        description: 'Workload: Enter the workload to build and push (e.g.: bert-large-fp32-inference, all).'
        default: resnet50v1-5-fp32-training
        required: true
        type: string

jobs:
  build-push-container:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Cleanup
        run: |
          rm -rf *
          docker images | grep "model-zoo" | awk '{print $3}' | xargs docker rmi --force || echo "No images to remove"
      - uses: actions/checkout@v3
      - if: github.event.inputs.workload != 'all'
        name: Build a workload container
        run: |
          echo "Building ${{ github.event.inputs.workload }} workload"
          export PATH=$PATH:$(pwd)/tools/scripts
          model-builder make -f ${{ github.event.inputs.framework }} ${{ github.event.inputs.workload }}
      - if: github.event.inputs.workload == 'all'
        name: Build all workload containers
        run: |
          echo "Building all workloads"
          export PATH=$PATH:$(pwd)/tools/scripts
          model-builder make -f ${{ github.event.inputs.framework }}
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: Container Artifacts
      #     path: ./output/*
      - uses: docker/login-action@v2
        with:
          registry: amr-registry.caas.intel.com
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to CAAS
        run: |
          export dockerfiles=$(docker images --format "{{.Repository}}:{{.Tag}}")
          for dockerfile in $dockerfiles; do if [[ "$dockerfile" == *"model-zoo"* ]]; then tag_value=${dockerfile#*:};
            docker tag model-zoo:${tag_value} amr-registry.caas.intel.com/aiops/mlops-ci:B-${{github.run_number}}-${tag_value};
            docker push amr-registry.caas.intel.com/aiops/mlops-ci:B-${{github.run_number}}-${tag_value}; fi; done
      - name: Cleanup images
        run: |
          docker images | grep "mlops-ci" | awk '{print $3}' | xargs docker rmi --force || echo "No images to remove"
