name: Model Zoo Workload Tests
on:
  workflow_dispatch:
    inputs:
      target-branch:
        default: develop
        required: true
        type: string
      runner_label:
        required: true
        default: Linux
        type: choice
        options:
        - pvc
        - atsm
        - Linux
      workload:
        required: true
        default: resnet50v1.5-inference
        type: string
      framework:
        required: true
        default: tensorflow
        type: choice
        options:
        - tensorflow
        - pytorch
      framework_version:
        required: true
        default: 2.12.0
        type: string
      script:
        required: true
        default: inference_realtime_multi_instance.sh
        type: string
      precision:
        required: true
        default: fp32
        type: string
      dataset:
        required: false
        type: string
      aikit_release:
        description: 'Target AIKit version'
        required: false
        type: string
      is_lkg_drop:
        required: false
        default: false
        type: boolean

  workflow_call:
    inputs:
      runner_label:
        required: true
        type: string
      workload:
        required: true
        type: string
      framework:
        required: true
        type: string
      framework_version:
        required: true
        type: string
      script:
        required: true
        type: string
      is_lkg_drop:
        required: false
        default: false
        type: boolean
      aikit_release:
        description: 'Target AIKit version'
        required: true
        type: string
      precision_1:
        required: true
        type: string
      precision_2:
        required: false
        type: string
      precision_3:
        required: false
        type: string
      precision_4:
        required: false
        type: string
      precision_5:
        required: false
        type: string
      batch_size:
        required: true
        type: string
      dataset:
        required: false
        type: string
      benchmark:
        required: false
        type: string
      benchmark_threshold_1:
        required: false
        type: string
      benchmark_threshold_2:
        required: false
        type: string
      benchmark_threshold_3:
        required: false
        type: string
      benchmark_threshold_4:
        required: false
        type: string
      benchmark_threshold_5:
        required: false
        type: string
      tolerance:
        required: false
        type: string

jobs:
  test:
    runs-on: [self-hosted, "${{ inputs.runner_label }}"]
    container:
      image: python:3.8
      credentials:
        username: ${{ secrets.HUB_USER }}
        password: ${{ secrets.HUB_TOKEN }} 
      env:
        http_proxy: ${{ secrets.HTTP_PROXY }}
        https_proxy: ${{ secrets.HTTPS_PROXY }}
        no_proxy: ${{ secrets.NO_PROXY }}
      volumes:
        - /tf_dataset/:/tf_dataset/
      options: --privileged
    continue-on-error: true
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout OneAPI Tools Repository
      uses: actions/checkout@v3
      with:
        repository: intel-innersource/frameworks.devops.oneapi.tools.component-drop-tool
        token: ${{ secrets.SYSTFQABOT_TOKEN }}
        path: oneapi_drop_tool
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install bc
        apt-get -y install numactl
    - name: Define framework folder
      shell: bash
      run: |
        if [[ "${{ inputs.framework }}" == "tensorflow" ]]; then
          if [[ "${{ inputs.runner_label }}" == "atsm" ]] || [[ "${{ inputs.runner_label }}" == "pvc" ]]; then
            echo "FOLDER=ITEX-XPU" >> "$GITHUB_ENV"
          else
            echo "FOLDER=TensorFlow" >> "$GITHUB_ENV"
          fi
        elif [[ "${{ inputs.framework }}" == "pytorch" ]]; then
          if [[ "${{ inputs.runner_label }}" == "atsm" ]] || [[ "${{ inputs.runner_label }}" == "pvc" ]]; then
            echo "FOLDER=IPEX-XPU" >> "$GITHUB_ENV"
          else
            echo "FOLDER=PyTorch" >> "$GITHUB_ENV"
          fi
        fi
    - name: Test Setup - PR/Schedule
      if: github.event_name != 'workflow_dispatch' || contains(github.event.workflow, 'cicd-pipeline.yml') 
      env:
        TF_QA_PROD: ${{ secrets.TF_QA_PROD }}
      shell: bash
      run: |
        # Run test for specified workload depending if precision exist (int8, fp16, fp32, bfloat16, bfloat32)
        PRECISIONS=("${{ inputs.precision_1 }}" "${{ inputs.precision_2 }}" "${{ inputs.precision_3 }}" "${{ inputs.precision_4 }}" "${{ inputs.precision_5 }}")
        for idx in {0..4}; do
          if [ "${PRECISIONS["$idx"]}" != "" ]; then
            ./tests/cicd/${{ env.FOLDER }}/setup.sh ${{ inputs.framework_version }} ${{ inputs.is_lkg_drop }} ${GITHUB_WORKSPACE} ${{ inputs.aikit_release }}
            ./tests/cicd/${{ env.FOLDER }}/${{ inputs.workload }}/run_test.sh ${PRECISIONS["$idx"]} ${{ inputs.script }} ${{ inputs.dataset }} ${GITHUB_WORKSPACE} ${{ inputs.is_lkg_drop }}
          fi
        done
    - name: Run ${{ inputs.workload }} tests - Workflow Dispatch
      if: github.event_name == 'workflow_dispatch' && contains(github.event.workflow, 'mz-workload-tests.yml') 
      env:
        TF_QA_PROD: ${{ secrets.TF_QA_PROD }}
      shell: bash
      run: |
        ./tests/cicd/${{ env.FOLDER }}/setup.sh ${{ inputs.framework_version }} ${{ inputs.is_lkg_drop }} ${GITHUB_WORKSPACE} ${{ inputs.aikit_release }}
        ./tests/cicd/${{ env.FOLDER }}/${{ inputs.workload }}/run_test.sh ${{ inputs.precision }} ${{ inputs.script }} ${{ inputs.dataset }} ${GITHUB_WORKSPACE} ${{ inputs.is_lkg_drop }}
    - if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: result-artifact
        path: tests/cicd/${{ env.FOLDER }}/${{ inputs.workload }}/output/*
